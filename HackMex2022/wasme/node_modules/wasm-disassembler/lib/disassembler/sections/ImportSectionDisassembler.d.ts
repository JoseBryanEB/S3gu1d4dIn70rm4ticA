import { WasmBinaryProvider } from '../../binaryProvider/WasmBinaryProvider';
import { Import } from '../../imports/Import';
import { SectionDisassembler } from './SectionDisassembler';
/**
 * Disassembles the Imports of an Import Section as described by the WASM binary
 * encoding specification.
 * @see https://webassembly.github.io/spec/core/bikeshed/index.html#binary-import
 */
export declare class ImportSectionDisassembler implements SectionDisassembler {
    private readonly binaryProvider;
    constructor(binaryProvider: WasmBinaryProvider);
    static readonly ImportablesMapping: {
        [importType: number]: (new () => any);
    };
    Disassemble(initialPointer: number): Import[];
    /**
     * Disassembles an import according to WASM specification.
     * @see https://webassembly.github.io/spec/core/bikeshed/index.html#syntax-import
     *
     * @param binaryProvider provider of binary layer of the encoded WASM.
     * @param initialPointer position in the byte array where to start looking for the import.
     */
    private FindImport;
    private static InstantiateImportable;
}
