import { SectionIds } from '../sections/Section';
import { WasmModule } from '../WasmModule';
import { WasmBinaryProvider } from '../binaryProvider/WasmBinaryProvider';
import { Disassembly } from './Disassembly';
import { Logger } from '../logging/logger';
export declare class WasmDisassembler {
    static readonly SectionIdLength = 1;
    private readonly bp;
    private readonly logger;
    private log;
    constructor(binaryProvider: WasmBinaryProvider, logger?: Logger);
    Disassemble(): Promise<Disassembly | null>;
    FindModules(startPointer: number): WasmModule[];
    FindModule(startPointer: number): [WasmModule, number] | null;
    private FindMagicNumber;
    private FindVersion;
    private FindSections;
    private FindSection;
    GetSectionId(initialPointer: number): SectionIds | null;
    private HasVarIntBytes;
}
